'''module for calculating and recording change tendency of components, automatically generated by eqn_parser'''

# File Created at 2020-04-08 17:02:25.713239

import numpy as np 

def dydt_rec(y, rindx, rstoi, reac_coef, pindx, nprod, step, dydt_vst, nreac, num_sb, num_speci, pconc, core_diss, Psat, kelv_fac, kimt, kwgt, Cw, act_coeff):
	# loop through components to record the tendency of change 
	for compi in dydt_vst.get('comp_index'): 
		# open relevant dictionary value 
		dydt_rec = dydt_vst.get(compi) 
		# keep count on relevant reactions 
		reac_count = 0 
		# loop through relevant reactions 
		for i in dydt_rec[0,0:-2]: # final two rows for particle- and wall-partitioning 
			i = int(i) # ensure index is integer # this necessary because the dydt_rec array is float (the tendency to change records beneath its first row are float) 
			# estimate gas-phase change tendency for every reaction involving this component 
			gprate = ((y[rindx[i, 0:nreac[i]]]**rstoi[i, 0:nreac[i]]).prod())*reac_coef[i] 
			# identify whether this component reacted or produced
			if sum(rindx[i, 0:nreac[i]]==compi)>0: 
				dydt_rec[step+1, reac_count] -= ((gprate)) #*3600)/np.abs(y[compi]))*100.0 
			if sum(pindx[i, 0:nprod[i]]==compi)>0: 
				dydt_rec[step+1, reac_count] += ((gprate)) #*3600)/np.abs(y[compi]))*100.0 
			reac_count += 1 
		# now estimate and record tendency to change due to particle- and wall-partitioning  
		# particle-partitioning 
		for ibin in range(num_sb-1): # size bin loop
			Csit = y[num_speci*(ibin+1):num_speci*(ibin+2)]
			conc_sum = np.zeros((1)) 
			if pconc>0.0: # if seed particles present 
				conc_sum[0] = ((Csit[0:-1].sum())+Csit[-1]*core_diss)
			else: 
				conc_sum[0] = Csit.sum() 
			# prevent numerical error due to division by zero 
			ish = conc_sum==0.0 
			conc_sum[ish] = 1.0e-40 
			# particle surface gas-phase concentration (molecules/cc (air)) 
			Csit = (Csit[compi]/conc_sum)*Psat[compi, 0]*kelv_fac[ibin]*act_coeff[compi, 0] 
			# partitioning rate (molecules/cc.s) 
			dydt_all = kimt[compi, ibin]*(y[compi]-Csit) 
			# gas-phase change (molecules/cc/s) 
			dydt_rec[step+1, reac_count] -= dydt_all 
		# wall-partitioning 
		if (kwgt)>1.0e-10: 
			# concentration at wall (molecules/cc (air)) 
			Csit = y[num_speci*num_sb:num_speci*(num_sb+1)] 
			Csit = (Psat[:,0]*(Csit/Cw)*act_coeff[compi, 0])
			dydt_all = (kwgt)*(y[compi]-Csit[compi]) 
			# gas-phase change (molecules/cc/s) 
			dydt_rec[step+1, reac_count+1] -= dydt_all 
		
	return(dydt_vst) 
